<?xml version="1.0" encoding="UTF-8"?>
<pm:Assertion xmlns:pm="http://systinet.com/2005/10/soa/policy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:a="http://systinet.com/2005/05/soa/model/artifact" xmlns:r="http://systinet.com/2005/05/repository" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pt="http://systinet.com/2005/05/soa/model/property/type" xmlns:rest="http://systinet.com/2005/05/soa/resource" xmlns:p="http://systinet.com/2005/05/soa/resource" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:g="http://systinet.com/2005/05/soa/model/propertyGroup">
        <p:Template xmlns:p="http://systinet.com/2005/10/soa/policy">
          <WSDLWithoutTypes xmlns="http://systinet.com/2005/10/soa/policy/best-practice"/>
        </p:Template>
        <pm:Bundle>
            <pm:String Key="error">The WSDL contains data declarations. To fix this problem move the data declarations to a separate XML schema file and import it from the WSDL.</pm:String>
        </pm:Bundle>
        <pm:Validation SourceType="xmlns(ns=http://schemas.xmlsoap.org/wsdl/)qname(ns:definitions)" xmlns:val="http://systinet.com/2005/10/soa/policy/validation">
          <val:XQuery>

    declare namespace xs="http://www.w3.org/2001/XMLSchema";
    declare namespace val="http://systinet.com/2005/10/soa/policy/validation";

    let $errors :=
        for $schema in //xs:schema where (exists($schema//xs:simpleType[@name]) or exists($schema//xs:complexType[@name]) or exists($schema//xs:element[@name]))
        return
            val:assertionFailed(val:l10n('error'), $schema)
    return
        if (empty($errors)) then
            val:assertionOK()
        else
            ()

          </val:XQuery>
        </pm:Validation>
      </pm:Assertion>
