<?xml version="1.0" encoding="UTF-8"?><pm:Assertion xmlns:pm="http://systinet.com/2005/10/soa/policy" xmlns:g="http://systinet.com/2005/05/soa/model/propertyGroup" xmlns:r="http://systinet.com/2005/05/repository" xmlns:p="http://systinet.com/2005/05/soa/model/property" xmlns:a="http://systinet.com/2005/05/soa/model/artifact" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:pt="http://systinet.com/2005/05/soa/model/property/type" xmlns:rest="http://systinet.com/2005/05/soa/resource" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><pm:Template><p0:Shortcuts-Validator xmlns:p0="urn:localhost:com:enter-your-organization-or-project-specific-namespace"/></pm:Template><pm:Validation><JavaScriptValidator xmlns="http://systinet.com/2005/10/soa/policy/validation" xmlns:xlink="http://www.w3.org/1999/xlink/">/**
 * This function is called iteratively by the java script validator,
 * There are some java script objects pre-initialized in the scripting context (e.g. repositoryService ...)  
 * You can find others and configure more in the managed script environment.js
 *
 * @param  resource
 *         an external resource or an artifact
 *
 * @param  params
 *         a map of params
 */
function validate(resource, params) {
    var artifact = resource;
    var artifactUuid = artifact.get_uuid();
    var shortCutsUnresolved = shortcutApi.getUnresolvedShortcuts(artifactUuid.toString());
    var listShortcut = "";
    if (shortCutsUnresolved != null &amp;&amp; shortCutsUnresolved.size() &gt; 0) {
    	
    	for (var row=0; row&lt;shortCutsUnresolved.size(); row++) {
    		var shortCutUnresolved = shortCutsUnresolved.get(row);
    		listShortcut = listShortcut + "Source: " + shortCutUnresolved.getSourceArtifactName() + ", target: " + shortCutUnresolved.getTargetArtifactName() + "; "
    	//return new JsValidationResult(JsValidationCode.FAILED, shortCutUnresolved);
    	}
    	return new JsValidationResult(JsValidationCode.FAILED, "This artifact contains unresolved shortcuts: " + listShortcut + ".");
    }
    return new JsValidationResult(JsValidationCode.OK);
}
</JavaScriptValidator></pm:Validation></pm:Assertion>