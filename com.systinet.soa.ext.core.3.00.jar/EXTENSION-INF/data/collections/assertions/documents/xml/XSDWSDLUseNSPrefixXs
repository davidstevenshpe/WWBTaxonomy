<?xml version="1.0" encoding="UTF-8"?>
<pm:Assertion xmlns:pm="http://systinet.com/2005/10/soa/policy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:a="http://systinet.com/2005/05/soa/model/artifact" xmlns:r="http://systinet.com/2005/05/repository" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pt="http://systinet.com/2005/05/soa/model/property/type" xmlns:rest="http://systinet.com/2005/05/soa/resource" xmlns:p="http://systinet.com/2005/05/soa/resource" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:g="http://systinet.com/2005/05/soa/model/propertyGroup">
        <p:Template xmlns:p="http://systinet.com/2005/10/soa/policy">
          <bp:XSDWSDLUseNSPrefixXs xmlns:bp="http://systinet.com/2005/10/soa/policy/bpa"/>
        </p:Template>
        <pm:Bundle>
            <pm:String Key="bad-prefix">The prefix for XML schema is "{0}" but should be "xs".</pm:String>
            <pm:String Key="not-on-root">The prefix "xs" is not declared for the XML schema namespace (http://www.w3.org/2001/XMLSchema) on the root element.</pm:String>
            <pm:String Key="multiple">There are multiple prefixes ({0}) declared for XML schema namespace (http://www.w3.org/2001/XMLSchema). Only one prefix "xs" should be declared.</pm:String>
        </pm:Bundle>
        <pm:Validation SourceType="xmlns(ns=http://schemas.xmlsoap.org/wsdl/)qname(ns:definitions)" xmlns:val="http://systinet.com/2005/10/soa/policy/validation">
          <val:XQuery>

    declare namespace val="http://systinet.com/2005/10/soa/policy/validation";

    let $prefixes :=
        for $prefix in in-scope-prefixes(/*[1]) where (namespace-uri-for-prefix($prefix, /*[1])="http://www.w3.org/2001/XMLSchema")
        return
            $prefix
    return
        if (count($prefixes) = 0) then
            val:assertionNotApplicable()
        else
            let $nonEmpty :=
                for $p in $prefixes where ($p!='')
                return
                    $p
            return
                if (count($nonEmpty)=1) then
                    if ($nonEmpty[1]='xs') then
                        val:assertionOK()
                    else
                        val:assertionFailed(val:l10n('bad-prefix', $nonEmpty[1]))
                else
                    if (count($nonEmpty)=0) then
                        val:assertionFailed(val:l10n('not-on-root'))
                    else
                        val:assertionFailed(val:l10n('multiple', string-join($nonEmpty, ' ')))

          </val:XQuery>
        </pm:Validation>
        <pm:Validation SourceType="xmlns(ns=http://www.w3.org/2001/XMLSchema)qname(ns:schema)" xmlns:val="http://systinet.com/2005/10/soa/policy/validation">
          <val:XQuery>

    declare namespace val="http://systinet.com/2005/10/soa/policy/validation";

    let $prefixes :=
        for $prefix in in-scope-prefixes(/*[1]) where (namespace-uri-for-prefix($prefix, /*[1])="http://www.w3.org/2001/XMLSchema")
        return
            $prefix
    return
        if (count($prefixes) = 0) then
            val:assertionNotApplicable()
        else
            let $nonEmpty :=
                for $p in $prefixes where ($p!='')
                return
                    $p
            return
                if (count($nonEmpty)=1) then
                    if ($nonEmpty[1]='xs') then
                        val:assertionOK()
                    else
                        val:assertionFailed(val:l10n('bad-prefix', $nonEmpty[1]))
                else
                    if (count($nonEmpty)=0) then
                        val:assertionFailed(val:l10n('not-on-root'))
                    else
                        val:assertionFailed(val:l10n('multiple', string-join($nonEmpty, ' ')))

          </val:XQuery>
        </pm:Validation>
      </pm:Assertion>
