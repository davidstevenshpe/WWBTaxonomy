<?xml version="1.0" encoding="UTF-8"?>
<pm:Assertion xmlns:pm="http://systinet.com/2005/10/soa/policy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:a="http://systinet.com/2005/05/soa/model/artifact" xmlns:r="http://systinet.com/2005/05/repository" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pt="http://systinet.com/2005/05/soa/model/property/type" xmlns:rest="http://systinet.com/2005/05/soa/resource" xmlns:p="http://systinet.com/2005/05/soa/resource" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:g="http://systinet.com/2005/05/soa/model/propertyGroup">
        <pm:Template>
          <bp:XSDElementsAreAnnotated xmlns:bp="http://systinet.com/2005/10/soa/policy/bpa"/>
        </pm:Template>
        <pm:Bundle>
            <pm:String Key="no-doc">The schema element definition "{0}" does not have any documentation. Add the documentation to xs:annotation/xs:documentation.</pm:String>
        </pm:Bundle>
        <pm:Validation SourceType="xmlns(ns=http://www.w3.org/2001/XMLSchema)qname(ns:schema)" xmlns:val="http://systinet.com/2005/10/soa/policy/validation">
          <val:XQuery>

    declare namespace xs="http://www.w3.org/2001/XMLSchema";
    declare namespace val="http://systinet.com/2005/10/soa/policy/validation";

    let $namedElements := /xs:schema/xs:element[@name]
    let $errElements := $namedElements[not(xs:annotation/xs:documentation)]
    return
        if (count($errElements) = 0) then
            if (count($namedElements) = 0) then
                val:assertionNotApplicable()
            else
                val:assertionOK()
        else
            for $err in $errElements
            return
                val:assertionFailed(val:l10n('no-doc', $err/@name), $err)

          </val:XQuery>
        </pm:Validation>
      </pm:Assertion>
