<?xml version="1.0" encoding="UTF-8"?>
<pm:Assertion xmlns:pm="http://systinet.com/2005/10/soa/policy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:a="http://systinet.com/2005/05/soa/model/artifact" xmlns:r="http://systinet.com/2005/05/repository" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pt="http://systinet.com/2005/05/soa/model/property/type" xmlns:rest="http://systinet.com/2005/05/soa/resource" xmlns:p="http://systinet.com/2005/05/soa/resource" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:g="http://systinet.com/2005/05/soa/model/propertyGroup">
        <pm:Template>
          <bp:XSDFileExtension xmlns:bp="http://systinet.com/2005/10/soa/policy/bpa"/>
        </pm:Template>
        <pm:Bundle>
            <pm:String Key="bad-ext">The filename of the schema document "{0}" must end with ".xsd" file extension.</pm:String>
        </pm:Bundle>
        <pm:Validation SourceType="xmlns(ns=http://www.w3.org/2001/XMLSchema)qname(ns:schema)" xmlns:val="http://systinet.com/2005/10/soa/policy/validation">
          <val:XQuery>

    declare namespace val="http://systinet.com/2005/10/soa/policy/validation";

    declare variable $metadata.source.url external;
    declare variable $metadata.source.is.subdocument external;

    if (not($metadata.source.is.subdocument)) then
        if (ends-with(lower-case($metadata.source.url),".xsd")) then
            val:assertionOK()
        else
            val:assertionFailed(val:l10n('bad-ext', $metadata.source.url))
    else
        val:assertionNotApplicable()

          </val:XQuery>
        </pm:Validation>
      </pm:Assertion>
