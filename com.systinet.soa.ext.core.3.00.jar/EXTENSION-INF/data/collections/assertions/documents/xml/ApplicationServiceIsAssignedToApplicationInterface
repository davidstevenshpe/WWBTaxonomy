<?xml version="1.0" encoding="UTF-8"?><pm:Assertion xmlns:pm="http://systinet.com/2005/10/soa/policy" xmlns:g="http://systinet.com/2005/05/soa/model/propertyGroup" xmlns:r="http://systinet.com/2005/05/repository" xmlns:p="http://systinet.com/2005/05/soa/model/property" xmlns:a="http://systinet.com/2005/05/soa/model/artifact" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:pt="http://systinet.com/2005/05/soa/model/property/type" xmlns:rest="http://systinet.com/2005/05/soa/resource" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><pm:Template><p0:ApplicationServiceIsAssignedToApplicationInterface xmlns:p0="urn:localhost:com:enter-your-organization-or-project-specific-namespace"/></pm:Template><pm:Validation SourceType="xmlns(ns=http://systinet.com/2005/05/soa/model/artifact)qname(ns:applicationServiceArtifact)"><JavaScriptValidator xmlns="http://systinet.com/2005/10/soa/policy/validation" xmlns:xlink="http://www.w3.org/1999/xlink/">/**
 * This function is called iteratively by the java script validator,
 * There are some java script objects pre-initialized in the scripting context (e.g. repositoryService ...)  
 * You can find others and configure more in the managed script environment.js
 *
 * @param  resource
 *         an external resource or an artifact
 *
 * @param  params
 *         a map of params
 */
function validate(resource, params) {
    var artifact = resource;
    repositoryService.fetchArtifactProperties(artifact,ArtifactPartSelector.ALL_PROPERTIES);
    var relations = artifact.getMultiRelationProperty("assignedFrom");
    if (relations == null || relations.size() == 0) {
    	return new JsValidationResult(JsValidationCode.FAILED, "This Application Service is not assigned from any Application Interface.");
    }
    else {
    	var isAssigned = false;
    	for (var row=0; row&lt;relations.size(); row++) {
    		var targetArtifact = relations.get(row).getTargetSdmName();
    		if (isApplicationInterface(targetArtifact)) {
    			isAssigned = true;
    			break;
    		}
    	}
    	if (isAssigned) {
    		return new JsValidationResult(JsValidationCode.OK);
    	}
    	else {
    		return new JsValidationResult(JsValidationCode.FAILED, "This Application Service is not assigned from any Application Interface.");
    	}
    }
    function isApplicationInterface (artifactType) {
    	if (artifactType == "applicationInterfaceArtifact") {
    		return true;
    	}
    	if (artifactType == "databaseInterfaceArtifact") {
    		return true;
    	}
    	if (artifactType == "remoteProcInvocationArtifact") {
    		return true;
    	}
    	if (artifactType == "userInterfaceArtifact") {
    		return true;
    	}
    	if (artifactType == "restInterfaceArtifact") {
    		return true;
    	}
    	if (artifactType == "publishSubscribeArtifact") {
    		return true;
    	}
    	if (artifactType == "queueArtifact") {
    		return true;
    	}
    	if (artifactType == "fileExchangeArtifact") {
    		return true;
    	}
    	if (artifactType == "webServiceArtifact") {
    		return true;
    	}
    	return false;
    };
}
</JavaScriptValidator></pm:Validation></pm:Assertion>